openapi: 3.0.3
info:
  title: API de produtos e clientes
servers:
  - url: http://localhost:8000

paths:
  # Seção de Autenticação
  /auth/login:
    post:
      summary: Login do cliente
      requestBody:
        description: Parâmetros necessários para autenticação do cliente, incluindo email e senha.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Endereço de e-mail do cliente utilizado para login.
                senha:
                  type: string
                  description: Senha do cliente, que deve corresponder à registrada.
      responses:
        '200':
          description: Sucesso, retorna um token de autenticação que deve ser usado em chamadas subsequentes.
        '401':
          description: Falha de autenticação, as credenciais fornecidas são inválidas.
        '404':
          description: Email ou senha não enviados na requisição.

  /auth/logout:
    post:
      summary: Logout do cliente
      responses:
        '200':
          description: O usuário fez logout com sucesso e o token de autenticação foi invalidado.
        '401':
          description: Não autorizado, o usuário não está logado.

  # ------------------------------------------------

  # Seção de Clientes
  /clientes:
    get:
      summary: Lista de clientes
      responses:
        '200':
          description: Retorna todos os clientes em formato JSON, incluindo informações como nome, email e ID.
        '500':
          description: Erro no servidor ao tentar listar os clientes.

    post:
      summary: Cria um cliente
      requestBody:
        description: Informações do novo cliente a serem criadas, incluindo nome, email e senha.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Nome completo do cliente a ser cadastrado.
                email:
                  type: string
                  description: Endereço de e-mail do cliente, deve ser único.
                senha:
                  type: string
                  description: Senha do cliente, deve ter uma complexidade mínima.
      responses:
        '201':
          description: Cliente criado com sucesso, retorna os dados do cliente recém-criado.
        '406':
          description: Nome, email e senha devem ser informados; um ou mais campos estão faltando.
        '500':
          description: Erro no servidor ao tentar criar um cliente.

  /clientes/{id}:
    get:
      summary: Obtém um cliente específico por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do cliente a ser retornado.
          schema:
            type: string
      responses:
        '200':
          description: Retorna o cliente específico, incluindo todas as suas informações.
        '404':
          description: Cliente não encontrado, o ID fornecido não corresponde a nenhum cliente existente.

    put:
      summary: Atualiza um cliente existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do cliente a ser atualizado.
          schema:
            type: string
      requestBody:
        description: Informações atualizadas do cliente, permitindo modificar nome, email ou senha.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Novo nome do cliente.
                email:
                  type: string
                  description: Novo endereço de e-mail do cliente.
                senha:
                  type: string
                  description: Nova senha do cliente.
      responses:
        '200':
          description: Cliente atualizado com sucesso, retorna os dados do cliente atualizado.
        '404':
          description: Cliente não encontrado, o ID fornecido não corresponde a nenhum cliente existente.
        '500':
          description: Erro no servidor ao tentar atualizar o cliente.

    delete:
      summary: Deleta um cliente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do cliente a ser deletado.
          schema:
            type: string
      responses:
        '204':
          description: Cliente deletado com sucesso, não retorna conteúdo.
        '404':
          description: Cliente não encontrado, o ID fornecido não corresponde a nenhum cliente existente.
        '500':
          description: Erro no servidor ao tentar deletar o cliente.

  # ------------------------------------------------

  # Seção de Produtos
  /produtos:
    get:
      summary: Lista de produtos
      responses:
        '200':
          description: Retorna todos os produtos em formato JSON, incluindo informações como nome, preço e ID.
        '500':
          description: Erro no servidor ao tentar listar os produtos.

    post:
      summary: Cria um produto
      requestBody:
        description: Informações do novo produto a serem criadas, incluindo nome e preço.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Nome do produto a ser cadastrado.
                preco:
                  type: number
                  description: Preço do produto, deve ser um valor positivo.
      responses:
        '201':
          description: Produto criado com sucesso, retorna os dados do produto recém-criado.
        '406':
          description: Nome e preço devem ser informados; um ou mais campos estão faltando.
        '500':
          description: Erro no servidor ao tentar criar um produto.

  /produtos/{id}:
    get:
      summary: Obtém um produto específico por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto a ser retornado.
          schema:
            type: string
      responses:
        '200':
          description: Retorna o produto específico, incluindo todas as suas informações.
        '404':
          description: Produto não encontrado, o ID fornecido não corresponde a nenhum produto existente.

    put:
      summary: Atualiza um produto existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto a ser atualizado.
          schema:
            type: string
      requestBody:
        description: Informações atualizadas do produto, permitindo modificar nome e preço.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Novo nome do produto.
                preco:
                  type: number
                  description: Novo preço do produto, deve ser um valor positivo.
      responses:
        '200':
          description: Produto atualizado com sucesso, retorna os dados do produto atualizado.
        '404':
          description: Produto não encontrado, o ID fornecido não corresponde a nenhum produto existente.
        '500':
          description: Erro no servidor ao tentar atualizar o produto.

    delete:
      summary: Deleta um produto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto a ser deletado.
          schema:
            type: string
      responses:
        '204':
          description: Produto deletado com sucesso, não retorna conteúdo.
        '404':
          description: Produto não encontrado, o ID fornecido não corresponde a nenhum produto existente.
        '500':
          description: Erro no servidor ao tentar deletar o produto.
